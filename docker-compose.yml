version: "3.9"

services:
  postgres:
    image: postgres:16
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: mydb
    ports:
      - "5432:5432" # Access DB from host
    volumes:
      - postgres_data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8085:80" # Access pgAdmin UI via http://localhost:8085
    depends_on:
      - postgres

  redis:
    image: redis:7
    container_name: redis
    restart: always
    ports:
      - "6379:6379" # Redis default port
    volumes:
      - redis_data:/data

  user-auth:
    build:
      context: ./backend/user-auth
      dockerfile: Dockerfile
    container_name: user-auth
    restart: always
    depends_on:
      - postgres
      - redis
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/mydb
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: pass
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      REDIS_HOST: redis
      REDIS_PORT: 6379
    ports:
      - "8080:8080"

  social-clone:
    build:
      context: ./backend/social-clone
      dockerfile: Dockerfile
    container_name: social-clone
    restart: always
    depends_on:
      - postgres
      - redis
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/mydb
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: pass
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      REDIS_HOST: redis
      REDIS_PORT: 6379
    ports:
      - "8082:8082"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    restart: always
    depends_on:
      - user-auth
      - social-clone
    ports:
      - "80:80"

volumes:
  postgres_data:
  redis_data:
